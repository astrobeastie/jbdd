plugins {
    id 'io.codearte.nexus-staging' version '0.11.0'
    id 'net.ltgt.errorprone' version '0.0.13'
    id 'net.ltgt.apt-idea' version '0.14'
}

group 'de.tum.in'
version '0.3.2'

apply plugin: 'java'

apply plugin: 'pmd'
apply plugin: 'checkstyle'

apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def defaultEncoding = 'UTF-8'
//noinspection GroovyAssignabilityCheck
tasks.withType(JavaCompile) { options.encoding = defaultEncoding }
//noinspection GroovyAssignabilityCheck
tasks.withType(Javadoc) { options.encoding = defaultEncoding }

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly 'org.immutables:value:2.5.5:annotations'
    annotationProcessor 'org.immutables:value:2.5.5'

    compileOnly 'com.google.errorprone:error_prone_annotations:2.2.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile 'com.google.guava:guava:24.0-jre'
}

apply from: 'gradle/analysis.gradle'

// Deployment - run with -Prelease clean uploadArchives closeAndReleaseRepository
if (project.hasProperty('release')) {
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'io.codearte.nexus-staging'
    apply from: 'gradle/publish.gradle'
}

// If a user file is present, include it.
if (file('../user.gradle').exists()) {
    apply from: '../user.gradle'
}

apply from: 'gradle/idea.gradle'